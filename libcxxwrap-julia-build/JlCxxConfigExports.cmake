# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS JlCxx::cxxwrap_julia JlCxx::cxxwrap_julia_stl)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target JlCxx::cxxwrap_julia
add_library(JlCxx::cxxwrap_julia SHARED IMPORTED)

set_target_properties(JlCxx::cxxwrap_julia PROPERTIES
  COMPATIBLE_INTERFACE_STRING "cxxwrap_julia_MAJOR_VERSION"
  INTERFACE_COMPILE_DEFINITIONS "JULIA_ENABLE_THREADING"
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "/home/david/cuNumeric.jl/libcxxwrap-julia/include;/home/david/.julia/juliaup/julia-1.11.2+0.x64.linux.gnu/include/julia"
  INTERFACE_LINK_LIBRARIES "/home/david/.julia/juliaup/julia-1.11.2+0.x64.linux.gnu/lib/libjulia.so.1.11"
  INTERFACE_cxxwrap_julia_MAJOR_VERSION "0"
)

# Create imported target JlCxx::cxxwrap_julia_stl
add_library(JlCxx::cxxwrap_julia_stl SHARED IMPORTED)

set_target_properties(JlCxx::cxxwrap_julia_stl PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "/home/david/cuNumeric.jl/libcxxwrap-julia/include;/home/david/.julia/juliaup/julia-1.11.2+0.x64.linux.gnu/include/julia"
  INTERFACE_LINK_LIBRARIES "JlCxx::cxxwrap_julia;/home/david/.julia/juliaup/julia-1.11.2+0.x64.linux.gnu/lib/libjulia.so.1.11"
)

# Import target "JlCxx::cxxwrap_julia" for configuration ""
set_property(TARGET JlCxx::cxxwrap_julia APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(JlCxx::cxxwrap_julia PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/david/cuNumeric.jl/libcxxwrap-julia-build/lib/libcxxwrap_julia.so.0.14.0"
  IMPORTED_SONAME_NOCONFIG "libcxxwrap_julia.so.0"
  )

# Import target "JlCxx::cxxwrap_julia_stl" for configuration ""
set_property(TARGET JlCxx::cxxwrap_julia_stl APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(JlCxx::cxxwrap_julia_stl PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/david/cuNumeric.jl/libcxxwrap-julia-build/lib/libcxxwrap_julia_stl.so"
  IMPORTED_SONAME_NOCONFIG "libcxxwrap_julia_stl.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
