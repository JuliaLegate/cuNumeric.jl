<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>[unknown] (29,711,758 samples, 1.30%)</title><rect x="10.0" y="469" width="15.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,096,614,516 samples, 48.06%)</title><rect x="165.7" y="501" width="567.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="168.73" y="511.5" >_dl_relocate_object</text>
</g>
<g >
<title>setup_arg_pages (14,096,652 samples, 0.62%)</title><rect x="93.8" y="341" width="7.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="96.81" y="351.5" ></text>
</g>
<g >
<title>ijl_toplevel_eval_in (763,831,174 samples, 33.48%)</title><rect x="794.9" y="309" width="395.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="797.93" y="319.5" >ijl_toplevel_eval_in</text>
</g>
<g >
<title>exit_mm (28,149,554 samples, 1.23%)</title><rect x="732.9" y="421" width="14.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="735.89" y="431.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (28,149,554 samples, 1.23%)</title><rect x="732.9" y="325" width="14.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="735.89" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,903,988 samples, 0.08%)</title><rect x="164.7" y="485" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="167.68" y="495.5" ></text>
</g>
<g >
<title>ijl_alloc_array_1d (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="85" width="15.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1177.22" y="95.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (28,149,554 samples, 1.23%)</title><rect x="732.9" y="293" width="14.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="735.89" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (28,161,753 samples, 1.23%)</title><rect x="794.9" y="37" width="14.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="797.93" y="47.5" ></text>
</g>
<g >
<title>x64_sys_call (14,096,652 samples, 0.62%)</title><rect x="93.8" y="469" width="7.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="96.81" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,161,753 samples, 1.23%)</title><rect x="794.9" y="181" width="14.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="797.93" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (39,572,211 samples, 1.73%)</title><rect x="58.1" y="469" width="20.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="61.07" y="479.5" ></text>
</g>
<g >
<title>all (2,281,559,822 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (1,903,988 samples, 0.08%)</title><rect x="164.7" y="469" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.68" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="437" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="59.28" y="447.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;llvm::AttributeSetNode&gt;::NodeEquals (29,711,758 samples, 1.30%)</title><rect x="10.0" y="453" width="15.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__mmap (1,903,988 samples, 0.08%)</title><rect x="164.7" y="517" width="1.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="167.68" y="527.5" ></text>
</g>
<g >
<title>ijl_expand_with_loc_warn (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="261" width="15.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1177.22" y="271.5" ></text>
</g>
<g >
<title>page_add_file_rmap (3,458,974 samples, 0.15%)</title><rect x="56.3" y="325" width="1.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="59.28" y="335.5" ></text>
</g>
<g >
<title>do_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="389" width="15.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="81.59" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="437" width="15.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="81.59" y="447.5" ></text>
</g>
<g >
<title>jl_read_reloclist (91,824,566 samples, 4.02%)</title><rect x="747.4" y="405" width="47.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="750.44" y="415.5" >jl_r..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,096,652 samples, 0.62%)</title><rect x="93.8" y="501" width="7.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="96.81" y="511.5" ></text>
</g>
<g >
<title>x64_sys_call (28,149,554 samples, 1.23%)</title><rect x="732.9" y="485" width="14.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="735.89" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1,903,988 samples, 0.08%)</title><rect x="164.7" y="453" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="167.68" y="463.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (14,096,652 samples, 0.62%)</title><rect x="93.8" y="437" width="7.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="96.81" y="447.5" ></text>
</g>
<g >
<title>_jl_gc_collect (367,324,451 samples, 16.10%)</title><rect x="809.5" y="197" width="190.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="812.50" y="207.5" >_jl_gc_collect</text>
</g>
<g >
<title>change_pmd_range.isra.0 (14,096,652 samples, 0.62%)</title><rect x="93.8" y="261" width="7.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="96.81" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="421" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="59.28" y="431.5" ></text>
</g>
<g >
<title>exec_binprm (14,096,652 samples, 0.62%)</title><rect x="93.8" y="389" width="7.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="96.81" y="399.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (1,096,614,516 samples, 48.06%)</title><rect x="165.7" y="517" width="567.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="168.73" y="527.5" >dl_open_worker_begin</text>
</g>
<g >
<title>japi1_include_string_81163.2 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="325" width="395.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="797.93" y="335.5" >japi1_include_string_81163.2</text>
</g>
<g >
<title>[perf-3312054.map] (733,352,565 samples, 32.14%)</title><rect x="794.9" y="245" width="379.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="797.93" y="255.5" >[perf-3312054.map]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39,572,211 samples, 1.73%)</title><rect x="58.1" y="485" width="20.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="61.07" y="495.5" ></text>
</g>
<g >
<title>llvm::TargetRegisterInfo::shouldRealignStack (28,691,134 samples, 1.26%)</title><rect x="116.1" y="501" width="14.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="119.08" y="511.5" ></text>
</g>
<g >
<title>mmput (28,149,554 samples, 1.23%)</title><rect x="732.9" y="405" width="14.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="735.89" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="421" width="15.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="81.59" y="431.5" ></text>
</g>
<g >
<title>copy_process (39,572,211 samples, 1.73%)</title><rect x="58.1" y="405" width="20.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="61.07" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="453" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="59.28" y="463.5" ></text>
</g>
<g >
<title>_Fork (43,139,893 samples, 1.89%)</title><rect x="56.3" y="501" width="22.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="59.28" y="511.5" >_..</text>
</g>
<g >
<title>[unknown] (263,138,304 samples, 11.53%)</title><rect x="10.0" y="517" width="136.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >[unknown]</text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="117" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_execve (14,096,652 samples, 0.62%)</title><rect x="93.8" y="453" width="7.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="96.81" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,149,554 samples, 1.23%)</title><rect x="732.9" y="517" width="14.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="735.89" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (3,458,974 samples, 0.15%)</title><rect x="56.3" y="357" width="1.8" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="59.28" y="367.5" ></text>
</g>
<g >
<title>do_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="389" width="1.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="59.28" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,149,554 samples, 1.23%)</title><rect x="732.9" y="501" width="14.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="735.89" y="511.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (28,149,554 samples, 1.23%)</title><rect x="732.9" y="277" width="14.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="735.89" y="287.5" ></text>
</g>
<g >
<title>kernel_clone (39,572,211 samples, 1.73%)</title><rect x="58.1" y="421" width="20.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="61.07" y="431.5" ></text>
</g>
<g >
<title>exit_mmap (28,149,554 samples, 1.23%)</title><rect x="732.9" y="389" width="14.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="735.89" y="399.5" ></text>
</g>
<g >
<title>filemap_map_pages (29,428,926 samples, 1.29%)</title><rect x="78.6" y="357" width="15.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="81.59" y="367.5" ></text>
</g>
<g >
<title>bprm_execve (14,096,652 samples, 0.62%)</title><rect x="93.8" y="421" width="7.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="96.81" y="431.5" ></text>
</g>
<g >
<title>_finish_julia_init.isra.0 (91,824,566 samples, 4.02%)</title><rect x="747.4" y="469" width="47.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="750.44" y="479.5" >_fin..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,903,988 samples, 0.08%)</title><rect x="164.7" y="501" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="167.68" y="511.5" ></text>
</g>
<g >
<title>next_uptodate_page (29,428,926 samples, 1.29%)</title><rect x="78.6" y="341" width="15.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="81.59" y="351.5" ></text>
</g>
<g >
<title>japi1__include_81171.2 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="357" width="395.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="797.93" y="367.5" >japi1__include_81171.2</text>
</g>
<g >
<title>mprotect_fixup (28,161,753 samples, 1.23%)</title><rect x="794.9" y="101" width="14.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="797.93" y="111.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (39,572,211 samples, 1.73%)</title><rect x="58.1" y="357" width="20.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="61.07" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,161,753 samples, 1.23%)</title><rect x="794.9" y="165" width="14.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="797.93" y="175.5" ></text>
</g>
<g >
<title>do_read_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.28" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (28,149,554 samples, 1.23%)</title><rect x="732.9" y="357" width="14.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="735.89" y="367.5" ></text>
</g>
<g >
<title>dup_task_struct (39,572,211 samples, 1.73%)</title><rect x="58.1" y="389" width="20.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="61.07" y="399.5" ></text>
</g>
<g >
<title>security_mmap_file (1,903,988 samples, 0.08%)</title><rect x="164.7" y="421" width="1.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="167.68" y="431.5" ></text>
</g>
<g >
<title>ijl_apply_generic (763,831,174 samples, 33.48%)</title><rect x="794.9" y="341" width="395.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="797.93" y="351.5" >ijl_apply_generic</text>
</g>
<g >
<title>handle_pte_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="405" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="59.28" y="415.5" ></text>
</g>
<g >
<title>do_set_pte (3,458,974 samples, 0.15%)</title><rect x="56.3" y="341" width="1.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="59.28" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (39,572,211 samples, 1.73%)</title><rect x="58.1" y="373" width="20.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="61.07" y="383.5" ></text>
</g>
<g >
<title>gc_mark_loop_serial_ (226,568,614 samples, 9.93%)</title><rect x="809.5" y="165" width="117.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="812.50" y="175.5" >gc_mark_loop_s..</text>
</g>
<g >
<title>gc_mark_loop_serial (226,568,614 samples, 9.93%)</title><rect x="809.5" y="181" width="117.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="812.50" y="191.5" >gc_mark_loop_s..</text>
</g>
<g >
<title>julia_include_46549.1 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="373" width="395.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="797.93" y="383.5" >julia_include_46549.1</text>
</g>
<g >
<title>unmap_page_range (28,149,554 samples, 1.23%)</title><rect x="732.9" y="341" width="14.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="735.89" y="351.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (28,161,753 samples, 1.23%)</title><rect x="794.9" y="69" width="14.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="797.93" y="79.5" ></text>
</g>
<g >
<title>jl_expand_macros (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="245" width="15.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1177.22" y="255.5" ></text>
</g>
<g >
<title>do_exit (28,149,554 samples, 1.23%)</title><rect x="732.9" y="437" width="14.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="735.89" y="447.5" ></text>
</g>
<g >
<title>ijl_restore_system_image_data (91,824,566 samples, 4.02%)</title><rect x="747.4" y="437" width="47.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="750.44" y="447.5" >ijl_..</text>
</g>
<g >
<title>ijl_gc_collect (395,486,204 samples, 17.33%)</title><rect x="794.9" y="213" width="204.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="797.93" y="223.5" >ijl_gc_collect</text>
</g>
<g >
<title>jfptr__start_82923.1 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="453" width="395.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="797.93" y="463.5" >jfptr__start_82923.1</text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="197" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="207.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (337,866,361 samples, 14.81%)</title><rect x="999.5" y="229" width="174.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1002.48" y="239.5" >__memset_evex_unaligne..</text>
</g>
<g >
<title>true_main (763,831,174 samples, 33.48%)</title><rect x="794.9" y="485" width="395.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="797.93" y="495.5" >true_main</text>
</g>
<g >
<title>_dl_fixup (29,428,926 samples, 1.29%)</title><rect x="78.6" y="501" width="15.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="81.59" y="511.5" ></text>
</g>
<g >
<title>gc_mark_obj8 (141,705,973 samples, 6.21%)</title><rect x="838.7" y="149" width="73.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="841.72" y="159.5" >gc_mark_..</text>
</g>
<g >
<title>load_elf_binary (14,096,652 samples, 0.62%)</title><rect x="93.8" y="357" width="7.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="96.81" y="367.5" ></text>
</g>
<g >
<title>apply_cl (31,625,592 samples, 1.39%)</title><rect x="25.4" y="485" width="16.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="28.37" y="495.5" ></text>
</g>
<g >
<title>jl_expand_macros (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="229" width="15.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1177.22" y="239.5" ></text>
</g>
<g >
<title>julia_exec_options_82784.2 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="421" width="395.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="797.93" y="431.5" >julia_exec_options_82784.2</text>
</g>
<g >
<title>[perf-3312054.map] (395,486,204 samples, 17.33%)</title><rect x="794.9" y="229" width="204.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="797.93" y="239.5" >[perf-3312054.map]</text>
</g>
<g >
<title>gc_mark_roots (84,523,868 samples, 3.70%)</title><rect x="926.7" y="181" width="43.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="929.68" y="191.5" >gc_m..</text>
</g>
<g >
<title>jl_gc_alloc (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="69" width="15.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1177.22" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_fork (39,572,211 samples, 1.73%)</title><rect x="58.1" y="437" width="20.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="61.07" y="447.5" ></text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="181" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="191.5" ></text>
</g>
<g >
<title>native_set_pte (14,096,652 samples, 0.62%)</title><rect x="93.8" y="229" width="7.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="96.81" y="239.5" ></text>
</g>
<g >
<title>jl_exprn (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="101" width="15.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1177.22" y="111.5" ></text>
</g>
<g >
<title>main (855,655,740 samples, 37.50%)</title><rect x="747.4" y="517" width="442.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="750.44" y="527.5" >main</text>
</g>
<g >
<title>mprotect_fixup (14,096,652 samples, 0.62%)</title><rect x="93.8" y="325" width="7.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="96.81" y="335.5" ></text>
</g>
<g >
<title>gc_mark_objarray.constprop.0 (28,366,422 samples, 1.24%)</title><rect x="912.0" y="149" width="14.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="915.01" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (28,149,554 samples, 1.23%)</title><rect x="732.9" y="469" width="14.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="735.89" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="485" width="1.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="59.28" y="495.5" ></text>
</g>
<g >
<title>change_p4d_range (14,096,652 samples, 0.62%)</title><rect x="93.8" y="277" width="7.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="96.81" y="287.5" ></text>
</g>
<g >
<title>change_protection_range (14,096,652 samples, 0.62%)</title><rect x="93.8" y="293" width="7.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="96.81" y="303.5" ></text>
</g>
<g >
<title>ijl_apply_generic (763,831,174 samples, 33.48%)</title><rect x="794.9" y="405" width="395.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="797.93" y="415.5" >ijl_apply_generic</text>
</g>
<g >
<title>unmap_vmas (28,149,554 samples, 1.23%)</title><rect x="732.9" y="373" width="14.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="735.89" y="383.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1,903,988 samples, 0.08%)</title><rect x="164.7" y="437" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="167.68" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range (28,149,554 samples, 1.23%)</title><rect x="732.9" y="309" width="14.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="735.89" y="319.5" ></text>
</g>
<g >
<title>search_binary_handler (14,096,652 samples, 0.62%)</title><rect x="93.8" y="373" width="7.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="96.81" y="383.5" ></text>
</g>
<g >
<title>julia (2,281,521,965 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >julia</text>
</g>
<g >
<title>perf_event_mmap (28,161,753 samples, 1.23%)</title><rect x="794.9" y="85" width="14.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="797.93" y="95.5" ></text>
</g>
<g >
<title>llvm::KnownBits::operator= (28,955,912 samples, 1.27%)</title><rect x="101.1" y="501" width="15.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="104.10" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="485" width="15.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="81.59" y="495.5" ></text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="133" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,096,652 samples, 0.62%)</title><rect x="93.8" y="485" width="7.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="96.81" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="469" width="15.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="81.59" y="479.5" ></text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="165" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="175.5" ></text>
</g>
<g >
<title>release_pages (28,149,554 samples, 1.23%)</title><rect x="732.9" y="261" width="14.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="735.89" y="271.5" ></text>
</g>
<g >
<title>[perf-3312054.map] (733,352,565 samples, 32.14%)</title><rect x="794.9" y="261" width="379.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="797.93" y="271.5" >[perf-3312054.map]</text>
</g>
<g >
<title>change_pte_range (14,096,652 samples, 0.62%)</title><rect x="93.8" y="245" width="7.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="96.81" y="255.5" ></text>
</g>
<g >
<title>ijl_restore_system_image (91,824,566 samples, 4.02%)</title><rect x="747.4" y="453" width="47.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="750.44" y="463.5" >ijl_..</text>
</g>
<g >
<title>__GI_____strtoull_l_internal (35,855,011 samples, 1.57%)</title><rect x="146.1" y="517" width="18.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="149.13" y="527.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (14,096,652 samples, 0.62%)</title><rect x="93.8" y="405" width="7.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="96.81" y="415.5" ></text>
</g>
<g >
<title>__mprotect (28,161,753 samples, 1.23%)</title><rect x="794.9" y="197" width="14.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="797.93" y="207.5" ></text>
</g>
<g >
<title>julia_init (91,824,566 samples, 4.02%)</title><rect x="747.4" y="485" width="47.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="750.44" y="495.5" >juli..</text>
</g>
<g >
<title>exc_page_fault (3,458,974 samples, 0.15%)</title><rect x="56.3" y="469" width="1.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="59.28" y="479.5" ></text>
</g>
<g >
<title>jl_repl_entrypoint (855,655,740 samples, 37.50%)</title><rect x="747.4" y="501" width="442.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="750.44" y="511.5" >jl_repl_entrypoint</text>
</g>
<g >
<title>[unknown] (89,480,655 samples, 3.92%)</title><rect x="10.0" y="501" width="46.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unk..</text>
</g>
<g >
<title>handle_pte_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="405" width="15.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="81.59" y="415.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeNotPreservedAnalysis (29,345,132 samples, 1.29%)</title><rect x="130.9" y="469" width="15.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="133.92" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (28,161,753 samples, 1.23%)</title><rect x="794.9" y="133" width="14.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="797.93" y="143.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (28,161,753 samples, 1.23%)</title><rect x="794.9" y="117" width="14.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="797.93" y="127.5" ></text>
</g>
<g >
<title>non-virtual thunk to llvm::FPPassManager::~FPPassManager (29,345,132 samples, 1.29%)</title><rect x="130.9" y="501" width="15.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="133.92" y="511.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (28,143,305 samples, 1.23%)</title><rect x="41.7" y="485" width="14.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="44.72" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="453" width="15.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="81.59" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (28,149,554 samples, 1.23%)</title><rect x="732.9" y="453" width="14.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="735.89" y="463.5" ></text>
</g>
<g >
<title>ijl_copy_ast (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="149" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1177.22" y="159.5" ></text>
</g>
<g >
<title>ijl_apply_generic (763,831,174 samples, 33.48%)</title><rect x="794.9" y="469" width="395.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="797.93" y="479.5" >ijl_apply_generic</text>
</g>
<g >
<title>x64_sys_call (39,572,211 samples, 1.73%)</title><rect x="58.1" y="453" width="20.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="61.07" y="463.5" ></text>
</g>
<g >
<title>julia__start_82922.1 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="437" width="395.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="797.93" y="447.5" >julia__start_82922.1</text>
</g>
<g >
<title>change_protection (14,096,652 samples, 0.62%)</title><rect x="93.8" y="309" width="7.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="96.81" y="319.5" ></text>
</g>
<g >
<title>jl_restore_system_image_from_stream_ (91,824,566 samples, 4.02%)</title><rect x="747.4" y="421" width="47.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="750.44" y="431.5" >jl_r..</text>
</g>
<g >
<title>[unknown] (29,345,132 samples, 1.29%)</title><rect x="130.9" y="485" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.92" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (28,161,753 samples, 1.23%)</title><rect x="794.9" y="149" width="14.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="797.93" y="159.5" ></text>
</g>
<g >
<title>perf_iterate_sb (28,161,753 samples, 1.23%)</title><rect x="794.9" y="53" width="14.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="797.93" y="63.5" ></text>
</g>
<g >
<title>do_read_fault (29,428,926 samples, 1.29%)</title><rect x="78.6" y="373" width="15.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.59" y="383.5" ></text>
</g>
<g >
<title>gc_sweep_pool (56,231,969 samples, 2.46%)</title><rect x="970.4" y="181" width="29.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="973.39" y="191.5" >gc..</text>
</g>
<g >
<title>jl_expand_macros (30,478,609 samples, 1.34%)</title><rect x="1174.2" y="213" width="15.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1177.22" y="223.5" ></text>
</g>
<g >
<title>jl_toplevel_eval_flex (763,831,174 samples, 33.48%)</title><rect x="794.9" y="277" width="395.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="797.93" y="287.5" >jl_toplevel_eval_flex</text>
</g>
<g >
<title>jfptr_include_46550.1 (763,831,174 samples, 33.48%)</title><rect x="794.9" y="389" width="395.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="797.93" y="399.5" >jfptr_include_46550.1</text>
</g>
<g >
<title>jl_toplevel_eval_flex (763,831,174 samples, 33.48%)</title><rect x="794.9" y="293" width="395.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="797.93" y="303.5" >jl_toplevel_eval_flex</text>
</g>
<g >
<title>[unknown] (29,711,758 samples, 1.30%)</title><rect x="10.0" y="485" width="15.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
</g>
</svg>
