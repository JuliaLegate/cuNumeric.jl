<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>ijl_gc_collect (338,075,179 samples, 18.57%)</title><rect x="950.7" y="421" width="219.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="953.73" y="431.5" >ijl_gc_collect</text>
</g>
<g >
<title>ksys_read (768,417,691 samples, 42.21%)</title><rect x="134.4" y="613" width="498.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="137.42" y="623.5" >ksys_read</text>
</g>
<g >
<title>llvm::IntervalMapImpl::Path::moveRight (28,247,486 samples, 1.55%)</title><rect x="793.6" y="709" width="18.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="796.61" y="719.5" ></text>
</g>
<g >
<title>xas_find (3,212,737 samples, 0.18%)</title><rect x="66.4" y="533" width="2.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="69.36" y="543.5" ></text>
</g>
<g >
<title>ijl_restore_system_image_data (185,294,824 samples, 10.18%)</title><rect x="830.6" y="629" width="120.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="833.63" y="639.5" >ijl_restore_sy..</text>
</g>
<g >
<title>__handle_mm_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="613" width="2.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="69.36" y="623.5" ></text>
</g>
<g >
<title>ijl_apply_generic (367,295,433 samples, 20.17%)</title><rect x="950.7" y="533" width="238.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="953.73" y="543.5" >ijl_apply_generic</text>
</g>
<g >
<title>dmu_buf_will_dirty_impl (768,417,691 samples, 42.21%)</title><rect x="134.4" y="389" width="498.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="137.42" y="399.5" >dmu_buf_will_dirty_impl</text>
</g>
<g >
<title>_finish_julia_init.isra.0 (185,294,824 samples, 10.18%)</title><rect x="830.6" y="661" width="120.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="833.63" y="671.5" >_finish_julia_..</text>
</g>
<g >
<title>do_syscall_64 (28,162,509 samples, 1.55%)</title><rect x="950.7" y="373" width="18.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="953.73" y="383.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::FindKey (28,874,235 samples, 1.59%)</title><rect x="811.9" y="709" width="18.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="814.92" y="719.5" ></text>
</g>
<g >
<title>julia_init (185,294,824 samples, 10.18%)</title><rect x="830.6" y="677" width="120.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="833.63" y="687.5" >julia_init</text>
</g>
<g >
<title>x64_sys_call (8,636,818 samples, 0.47%)</title><rect x="90.7" y="661" width="5.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="93.72" y="671.5" ></text>
</g>
<g >
<title>perf_event_mmap (28,162,509 samples, 1.55%)</title><rect x="950.7" y="293" width="18.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="953.73" y="303.5" ></text>
</g>
<g >
<title>bprm_execve (8,636,818 samples, 0.47%)</title><rect x="90.7" y="613" width="5.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="93.72" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,163,795 samples, 1.55%)</title><rect x="738.5" y="709" width="18.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="741.54" y="719.5" ></text>
</g>
<g >
<title>sa_attr_op (768,417,691 samples, 42.21%)</title><rect x="134.4" y="421" width="498.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="137.42" y="431.5" >sa_attr_op</text>
</g>
<g >
<title>_raw_spin_lock (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="37" width="19.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1172.85" y="47.5" ></text>
</g>
<g >
<title>ret_from_fork (1,964,921 samples, 0.11%)</title><rect x="133.1" y="693" width="1.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="136.14" y="703.5" ></text>
</g>
<g >
<title>julia_run_passes_37486.2 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="213" width="19.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1172.85" y="223.5" ></text>
</g>
<g >
<title>eval_value (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="421" width="19.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1172.85" y="431.5" ></text>
</g>
<g >
<title>_jl_gc_collect (309,912,670 samples, 17.02%)</title><rect x="969.0" y="405" width="200.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="971.98" y="415.5" >_jl_gc_collect</text>
</g>
<g >
<title>__mark_inode_dirty (768,417,691 samples, 42.21%)</title><rect x="134.4" y="501" width="498.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="137.42" y="511.5" >__mark_inode_dirty</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (768,417,691 samples, 42.21%)</title><rect x="134.4" y="677" width="498.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="137.42" y="687.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>handle_pte_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="581" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="136.14" y="591.5" ></text>
</g>
<g >
<title>exc_page_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="645" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="136.14" y="655.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectCodeCommon (28,401,392 samples, 1.56%)</title><rect x="28.4" y="661" width="18.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="31.37" y="671.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1,951,891 samples, 0.11%)</title><rect x="133.1" y="677" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="136.14" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="645" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="69.36" y="655.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start (1,849,442 samples, 0.10%)</title><rect x="1188.8" y="693" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1191.78" y="703.5" ></text>
</g>
<g >
<title>zpl_file_accessed (768,417,691 samples, 42.21%)</title><rect x="134.4" y="549" width="498.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="137.42" y="559.5" >zpl_file_accessed</text>
</g>
<g >
<title>asm_exc_page_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="133" width="19.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1172.85" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="597" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="136.14" y="607.5" ></text>
</g>
<g >
<title>jl_interpret_toplevel_thunk (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="453" width="19.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1172.85" y="463.5" ></text>
</g>
<g >
<title>jl_repl_entrypoint (552,590,257 samples, 30.35%)</title><rect x="830.6" y="693" width="358.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="833.63" y="703.5" >jl_repl_entrypoint</text>
</g>
<g >
<title>jl_generate_fptr_impl (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="357" width="19.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1172.85" y="367.5" ></text>
</g>
<g >
<title>perf_iterate_sb (28,162,509 samples, 1.55%)</title><rect x="950.7" y="261" width="18.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="953.73" y="271.5" ></text>
</g>
<g >
<title>julia_typeinf_ext_35644.1 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="261" width="19.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1172.85" y="271.5" ></text>
</g>
<g >
<title>jl_restore_system_image_from_stream_ (185,294,824 samples, 10.18%)</title><rect x="830.6" y="613" width="120.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="833.63" y="623.5" >jl_restore_sys..</text>
</g>
<g >
<title>ijl_apply_generic (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="325" width="19.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1172.85" y="335.5" ></text>
</g>
<g >
<title>__mprotect (28,162,509 samples, 1.55%)</title><rect x="950.7" y="405" width="18.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="953.73" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,636,818 samples, 0.47%)</title><rect x="90.7" y="693" width="5.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="93.72" y="703.5" ></text>
</g>
<g >
<title>exc_page_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="661" width="2.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="69.36" y="671.5" ></text>
</g>
<g >
<title>[unknown] (58,615,991 samples, 3.22%)</title><rect x="28.4" y="693" width="38.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.37" y="703.5" >[un..</text>
</g>
<g >
<title>ijl_restore_system_image (185,294,824 samples, 10.18%)</title><rect x="830.6" y="645" width="120.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="833.63" y="655.5" >ijl_restore_sy..</text>
</g>
<g >
<title>__x64_sys_mprotect (28,162,509 samples, 1.55%)</title><rect x="950.7" y="341" width="18.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="953.73" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (28,163,795 samples, 1.55%)</title><rect x="738.5" y="677" width="18.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="741.54" y="687.5" ></text>
</g>
<g >
<title>xas_load (3,212,737 samples, 0.18%)</title><rect x="66.4" y="517" width="2.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="69.36" y="527.5" ></text>
</g>
<g >
<title>gc_mark_objarray.constprop.0 (28,157,698 samples, 1.55%)</title><rect x="1115.1" y="357" width="18.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1118.09" y="367.5" ></text>
</g>
<g >
<title>zap_pte_range (28,163,795 samples, 1.55%)</title><rect x="738.5" y="501" width="18.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="741.54" y="511.5" ></text>
</g>
<g >
<title>ijl_alloc_array_1d (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="165" width="19.0" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1172.85" y="175.5" ></text>
</g>
<g >
<title>mmput (28,163,795 samples, 1.55%)</title><rect x="738.5" y="597" width="18.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="741.54" y="607.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="597" width="2.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="69.36" y="607.5" ></text>
</g>
<g >
<title>jl_read_reloclist (154,071,530 samples, 8.46%)</title><rect x="850.9" y="597" width="99.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="853.87" y="607.5" >jl_read_relo..</text>
</g>
<g >
<title>release_pages (28,163,795 samples, 1.55%)</title><rect x="738.5" y="453" width="18.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="741.54" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="117" width="19.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1172.85" y="127.5" ></text>
</g>
<g >
<title>jl_compile_method_internal (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="373" width="19.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1172.85" y="383.5" ></text>
</g>
<g >
<title>ijl_apply_generic (367,295,433 samples, 20.17%)</title><rect x="950.7" y="597" width="238.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="953.73" y="607.5" >ijl_apply_generic</text>
</g>
<g >
<title>dmu_buf_will_dirty (768,417,691 samples, 42.21%)</title><rect x="134.4" y="405" width="498.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="137.42" y="415.5" >dmu_buf_will_dirty</text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::AnalysisUsage*, llvm::DenseMapInfo&lt;llvm::Pass*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Pass*, llvm::AnalysisUsage*&gt; &gt;, llvm::Pass*, llvm::AnalysisUsage*, llvm::DenseMapInfo&lt;llvm::Pass*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Pass*, llvm::AnalysisUsage*&gt; &gt;::LookupBucketFor&lt;llvm::Pass const*&gt; (28,173,317 samples, 1.55%)</title><rect x="96.3" y="693" width="18.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="99.32" y="703.5" ></text>
</g>
<g >
<title>jfptr_include_46550.1 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="581" width="238.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="953.73" y="591.5" >jfptr_include_46550.1</text>
</g>
<g >
<title>julia_typeinf_ext_toplevel_35674.1 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="277" width="19.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1172.85" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (768,417,691 samples, 42.21%)</title><rect x="134.4" y="629" width="498.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="137.42" y="639.5" >__x64_sys_read</text>
</g>
<g >
<title>handle_mm_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="629" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="69.36" y="639.5" ></text>
</g>
<g >
<title>jl_type_infer (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="341" width="19.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1172.85" y="351.5" ></text>
</g>
<g >
<title>gc_sweep_pool (56,329,405 samples, 3.09%)</title><rect x="1133.3" y="389" width="36.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1136.34" y="399.5" >gc_..</text>
</g>
<g >
<title>perf_iterate_ctx (28,162,509 samples, 1.55%)</title><rect x="950.7" y="245" width="18.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="953.73" y="255.5" ></text>
</g>
<g >
<title>do_wp_page (1,951,891 samples, 0.11%)</title><rect x="133.1" y="565" width="1.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="136.14" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="533" width="22.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="71.50" y="543.5" >_..</text>
</g>
<g >
<title>[unknown] (28,401,392 samples, 1.56%)</title><rect x="28.4" y="677" width="18.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.37" y="687.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (28,163,795 samples, 1.55%)</title><rect x="738.5" y="517" width="18.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="741.54" y="527.5" ></text>
</g>
<g >
<title>ijl_apply_generic (367,295,433 samples, 20.17%)</title><rect x="950.7" y="661" width="238.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="953.73" y="671.5" >ijl_apply_generic</text>
</g>
<g >
<title>do_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="501" width="22.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="71.50" y="511.5" >d..</text>
</g>
<g >
<title>__x64_sys_execve (8,636,818 samples, 0.47%)</title><rect x="90.7" y="645" width="5.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="93.72" y="655.5" ></text>
</g>
<g >
<title>sa_bulk_update (768,417,691 samples, 42.21%)</title><rect x="134.4" y="453" width="498.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="137.42" y="463.5" >sa_bulk_update</text>
</g>
<g >
<title>add_mm_counter_fast (34,282,012 samples, 1.88%)</title><rect x="68.5" y="437" width="22.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="71.50" y="447.5" >a..</text>
</g>
<g >
<title>do_lookup_x (134,023,327 samples, 7.36%)</title><rect x="651.7" y="709" width="86.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="654.68" y="719.5" >do_lookup_x</text>
</g>
<g >
<title>[unknown] (28,638,143 samples, 1.57%)</title><rect x="114.6" y="677" width="18.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="117.58" y="687.5" ></text>
</g>
<g >
<title>flush_signal_handlers (8,636,818 samples, 0.47%)</title><rect x="90.7" y="517" width="5.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="93.72" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,282,012 samples, 1.88%)</title><rect x="68.5" y="677" width="22.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="71.50" y="687.5" >e..</text>
</g>
<g >
<title>start (1,849,442 samples, 0.10%)</title><rect x="1188.8" y="709" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1191.78" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (28,163,795 samples, 1.55%)</title><rect x="738.5" y="661" width="18.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="741.54" y="671.5" ></text>
</g>
<g >
<title>jl_gc_alloc (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="149" width="19.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1172.85" y="159.5" ></text>
</g>
<g >
<title>unmap_vmas (28,163,795 samples, 1.55%)</title><rect x="738.5" y="565" width="18.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="741.54" y="575.5" ></text>
</g>
<g >
<title>load_elf_binary (8,636,818 samples, 0.47%)</title><rect x="90.7" y="549" width="5.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="93.72" y="559.5" ></text>
</g>
<g >
<title>new_sync_read (768,417,691 samples, 42.21%)</title><rect x="134.4" y="581" width="498.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="137.42" y="591.5" >new_sync_read</text>
</g>
<g >
<title>all (1,820,624,606 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>do_set_pte (34,282,012 samples, 1.88%)</title><rect x="68.5" y="453" width="22.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="71.50" y="463.5" >d..</text>
</g>
<g >
<title>foldOrCommuteConstant (28,277,467 samples, 1.55%)</title><rect x="756.8" y="709" width="18.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="759.80" y="719.5" ></text>
</g>
<g >
<title>mprotect_fixup (28,162,509 samples, 1.55%)</title><rect x="950.7" y="309" width="18.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="953.73" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,162,509 samples, 1.55%)</title><rect x="950.7" y="389" width="18.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="953.73" y="399.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (28,163,795 samples, 1.55%)</title><rect x="738.5" y="485" width="18.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="741.54" y="495.5" ></text>
</g>
<g >
<title>_dl_relocate_object (29,545,640 samples, 1.62%)</title><rect x="632.5" y="693" width="19.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="635.53" y="703.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (28,162,509 samples, 1.55%)</title><rect x="950.7" y="277" width="18.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="953.73" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (1,951,891 samples, 0.11%)</title><rect x="133.1" y="517" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="136.14" y="527.5" ></text>
</g>
<g >
<title>do_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="581" width="2.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="69.36" y="591.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::~ExecutionDomainFix (28,638,143 samples, 1.57%)</title><rect x="114.6" y="661" width="18.5" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="117.58" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="69" width="19.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1172.85" y="79.5" ></text>
</g>
<g >
<title>dbuf_dirty (768,417,691 samples, 42.21%)</title><rect x="134.4" y="373" width="498.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="137.42" y="383.5" >dbuf_dirty</text>
</g>
<g >
<title>unmap_page_range (28,163,795 samples, 1.55%)</title><rect x="738.5" y="533" width="18.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="741.54" y="543.5" ></text>
</g>
<g >
<title>julia (1,820,597,233 samples, 100.00%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >julia</text>
</g>
<g >
<title>clear_page_erms (1,951,891 samples, 0.11%)</title><rect x="133.1" y="485" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.14" y="495.5" ></text>
</g>
<g >
<title>main (552,590,257 samples, 30.35%)</title><rect x="830.6" y="709" width="358.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="833.63" y="719.5" >main</text>
</g>
<g >
<title>do_syscall_64 (8,636,818 samples, 0.47%)</title><rect x="90.7" y="677" width="5.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="93.72" y="687.5" ></text>
</g>
<g >
<title>julia_typeinf_ext_toplevel_35669.1 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="293" width="19.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1172.85" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (28,163,795 samples, 1.55%)</title><rect x="738.5" y="581" width="18.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="741.54" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="101" width="19.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1172.85" y="111.5" ></text>
</g>
<g >
<title>file_accessed (768,417,691 samples, 42.21%)</title><rect x="134.4" y="533" width="498.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="137.42" y="543.5" >file_accessed</text>
</g>
<g >
<title>handle_mm_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="613" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="136.14" y="623.5" ></text>
</g>
<g >
<title>japi1__include_81171.2 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="549" width="238.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="953.73" y="559.5" >japi1__include_81171.2</text>
</g>
<g >
<title>gc_mark_loop_serial (253,583,265 samples, 13.93%)</title><rect x="969.0" y="389" width="164.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="971.98" y="399.5" >gc_mark_loop_serial</text>
</g>
<g >
<title>sa_bulk_update_impl (768,417,691 samples, 42.21%)</title><rect x="134.4" y="437" width="498.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="137.42" y="447.5" >sa_bulk_update_impl</text>
</g>
<g >
<title>do_call (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="405" width="19.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1172.85" y="415.5" ></text>
</g>
<g >
<title>begin_new_exec (8,636,818 samples, 0.47%)</title><rect x="90.7" y="533" width="5.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="93.72" y="543.5" ></text>
</g>
<g >
<title>julia__typeinf_35418.2 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="229" width="19.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1172.85" y="239.5" ></text>
</g>
<g >
<title>search_binary_handler (8,636,818 samples, 0.47%)</title><rect x="90.7" y="565" width="5.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="93.72" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="549" width="22.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.50" y="559.5" >h..</text>
</g>
<g >
<title>jfptr__start_82923.1 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="645" width="238.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="953.73" y="655.5" >jfptr__start_82923.1</text>
</g>
<g >
<title>unmap_single_vma (28,163,795 samples, 1.55%)</title><rect x="738.5" y="549" width="18.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="741.54" y="559.5" ></text>
</g>
<g >
<title>handle_pte_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="517" width="22.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="71.50" y="527.5" >h..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (8,636,818 samples, 0.47%)</title><rect x="90.7" y="629" width="5.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="93.72" y="639.5" ></text>
</g>
<g >
<title>_Fork (3,305,081 samples, 0.18%)</title><rect x="66.4" y="693" width="2.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="69.36" y="703.5" ></text>
</g>
<g >
<title>dnode_setdirty (768,417,691 samples, 42.21%)</title><rect x="134.4" y="357" width="498.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="137.42" y="367.5" >dnode_setdirty</text>
</g>
<g >
<title>zpl_dirty_inode (768,417,691 samples, 42.21%)</title><rect x="134.4" y="485" width="498.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="137.42" y="495.5" >zpl_dirty_inode</text>
</g>
<g >
<title>touch_atime (768,417,691 samples, 42.21%)</title><rect x="134.4" y="517" width="498.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="137.42" y="527.5" >touch_atime</text>
</g>
<g >
<title>exec_binprm (8,636,818 samples, 0.47%)</title><rect x="90.7" y="581" width="5.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="93.72" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="629" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="136.14" y="639.5" ></text>
</g>
<g >
<title>do_read_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="565" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.36" y="575.5" ></text>
</g>
<g >
<title>[unknown] (161,651,362 samples, 8.88%)</title><rect x="28.4" y="709" width="104.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.37" y="719.5" >[unknown]</text>
</g>
<g >
<title>bprm_execve.part.0 (8,636,818 samples, 0.47%)</title><rect x="90.7" y="597" width="5.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="93.72" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,163,795 samples, 1.55%)</title><rect x="738.5" y="693" width="18.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="741.54" y="703.5" ></text>
</g>
<g >
<title>julia_slot2reg_37545.2 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="197" width="19.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1172.85" y="207.5" ></text>
</g>
<g >
<title>llvm::CallBase::getArgOperandWithAttribute (28,523,765 samples, 1.57%)</title><rect x="775.1" y="709" width="18.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="778.12" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="85" width="19.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1172.85" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (768,417,691 samples, 42.21%)</title><rect x="134.4" y="661" width="498.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="137.42" y="671.5" >do_syscall_64</text>
</g>
<g >
<title>filemap_map_pages (3,212,737 samples, 0.18%)</title><rect x="66.4" y="549" width="2.0" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="69.36" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (28,162,509 samples, 1.55%)</title><rect x="950.7" y="357" width="18.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="953.73" y="367.5" ></text>
</g>
<g >
<title>eval_body (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="437" width="19.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1172.85" y="447.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (34,282,012 samples, 1.88%)</title><rect x="68.5" y="613" width="22.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="71.50" y="623.5" >c..</text>
</g>
<g >
<title>alloc_pages_vma (1,951,891 samples, 0.11%)</title><rect x="133.1" y="533" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="136.14" y="543.5" ></text>
</g>
<g >
<title>japi1_include_string_81163.2 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="517" width="238.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="953.73" y="527.5" >japi1_include_string_81163.2</text>
</g>
<g >
<title>[perf-1837748.map] (338,075,179 samples, 18.57%)</title><rect x="950.7" y="437" width="219.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="953.73" y="447.5" >[perf-1837748.map]</text>
</g>
<g >
<title>julia_scan_slot_def_use_35739.2 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="181" width="19.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1172.85" y="191.5" ></text>
</g>
<g >
<title>exit_mm (28,163,795 samples, 1.55%)</title><rect x="738.5" y="613" width="18.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="741.54" y="623.5" ></text>
</g>
<g >
<title>do_exit (28,163,795 samples, 1.55%)</title><rect x="738.5" y="629" width="18.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="741.54" y="639.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (28,163,795 samples, 1.55%)</title><rect x="738.5" y="469" width="18.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="741.54" y="479.5" ></text>
</g>
<g >
<title>julia_include_46549.1 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="565" width="238.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="953.73" y="575.5" >julia_include_46549.1</text>
</g>
<g >
<title>_dl_map_object (768,417,691 samples, 42.21%)</title><rect x="134.4" y="709" width="498.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="137.42" y="719.5" >_dl_map_object</text>
</g>
<g >
<title>__GI___read_nocancel (768,417,691 samples, 42.21%)</title><rect x="134.4" y="693" width="498.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="137.42" y="703.5" >__GI___read_nocancel</text>
</g>
<g >
<title>do_group_exit (28,163,795 samples, 1.55%)</title><rect x="738.5" y="645" width="18.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="741.54" y="655.5" ></text>
</g>
<g >
<title>true_main (367,295,433 samples, 20.17%)</title><rect x="950.7" y="677" width="238.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="953.73" y="687.5" >true_main</text>
</g>
<g >
<title>do_syscall_64 (34,282,012 samples, 1.88%)</title><rect x="68.5" y="661" width="22.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="71.50" y="671.5" >d..</text>
</g>
<g >
<title>llvm::ExecutionDomainFix::~ExecutionDomainFix (28,638,143 samples, 1.57%)</title><rect x="114.6" y="693" width="18.5" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="117.58" y="703.5" ></text>
</g>
<g >
<title>__getauxval (1,849,442 samples, 0.10%)</title><rect x="1188.8" y="677" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.78" y="687.5" ></text>
</g>
<g >
<title>do_read_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="485" width="22.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.50" y="495.5" >d..</text>
</g>
<g >
<title>__block_app_sigs (34,282,012 samples, 1.88%)</title><rect x="68.5" y="693" width="22.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="71.50" y="703.5" >_..</text>
</g>
<g >
<title>asm_exc_page_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="597" width="22.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="71.50" y="607.5" >a..</text>
</g>
<g >
<title>__x64_sys_rt_sigprocmask (34,282,012 samples, 1.88%)</title><rect x="68.5" y="629" width="22.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="71.50" y="639.5" >_..</text>
</g>
<g >
<title>gc_mark_loop_serial_ (253,583,265 samples, 13.93%)</title><rect x="969.0" y="373" width="164.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="971.98" y="383.5" >gc_mark_loop_serial_</text>
</g>
<g >
<title>ijl_apply_generic (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="389" width="19.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1172.85" y="399.5" ></text>
</g>
<g >
<title>symbol (30,214,599 samples, 1.66%)</title><rect x="46.8" y="677" width="19.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="49.78" y="687.5" ></text>
</g>
<g >
<title>julia_exec_options_82784.2 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="613" width="238.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="953.73" y="623.5" >julia_exec_options_82784.2</text>
</g>
<g >
<title>dl_open_worker_begin (29,545,640 samples, 1.62%)</title><rect x="632.5" y="709" width="19.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="635.53" y="719.5" ></text>
</g>
<g >
<title>ijl_toplevel_eval_in (367,295,433 samples, 20.17%)</title><rect x="950.7" y="501" width="238.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="953.73" y="511.5" >ijl_toplevel_eval_in</text>
</g>
<g >
<title>_Fork (1,964,921 samples, 0.11%)</title><rect x="133.1" y="709" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="136.14" y="719.5" ></text>
</g>
<g >
<title>exc_page_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="581" width="22.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="71.50" y="591.5" >e..</text>
</g>
<g >
<title>wp_page_copy (1,951,891 samples, 0.11%)</title><rect x="133.1" y="549" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="136.14" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,951,891 samples, 0.11%)</title><rect x="133.1" y="661" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="136.14" y="671.5" ></text>
</g>
<g >
<title>julia__start_82922.1 (367,295,433 samples, 20.17%)</title><rect x="950.7" y="629" width="238.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="953.73" y="639.5" >julia__start_82922.1</text>
</g>
<g >
<title>get_page_from_freelist (1,951,891 samples, 0.11%)</title><rect x="133.1" y="501" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="136.14" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,212,737 samples, 0.18%)</title><rect x="66.4" y="677" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="69.36" y="687.5" ></text>
</g>
<g >
<title>jl_toplevel_eval_flex (367,295,433 samples, 20.17%)</title><rect x="950.7" y="469" width="238.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="953.73" y="479.5" >jl_toplevel_eval_flex</text>
</g>
<g >
<title>sync_regs (38,344,636 samples, 2.11%)</title><rect x="925.9" y="581" width="24.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="928.88" y="591.5" >s..</text>
</g>
<g >
<title>[perf-1837748.map] (338,075,179 samples, 18.57%)</title><rect x="950.7" y="453" width="219.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="953.73" y="463.5" >[perf-1837748.map]</text>
</g>
<g >
<title>dbuf_dirty (768,417,691 samples, 42.21%)</title><rect x="134.4" y="341" width="498.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="137.42" y="351.5" >dbuf_dirty</text>
</g>
<g >
<title>do_user_addr_fault (34,282,012 samples, 1.88%)</title><rect x="68.5" y="565" width="22.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="71.50" y="575.5" >d..</text>
</g>
<g >
<title>filemap_map_pages (34,282,012 samples, 1.88%)</title><rect x="68.5" y="469" width="22.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="71.50" y="479.5" >f..</text>
</g>
<g >
<title>x64_sys_call (34,282,012 samples, 1.88%)</title><rect x="68.5" y="645" width="22.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="71.50" y="655.5" >x..</text>
</g>
<g >
<title>gc_mark_obj8 (112,747,113 samples, 6.19%)</title><rect x="1042.0" y="357" width="73.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1045.01" y="367.5" >gc_mark_..</text>
</g>
<g >
<title>vfs_read (768,417,691 samples, 42.21%)</title><rect x="134.4" y="597" width="498.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="137.42" y="607.5" >vfs_read</text>
</g>
<g >
<title>handle_pte_fault (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="53" width="19.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1172.85" y="63.5" ></text>
</g>
<g >
<title>jfptr_typeinf_ext_toplevel_35670.1 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="309" width="19.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1172.85" y="319.5" ></text>
</g>
<g >
<title>julia_typeinf_35386.2 (29,220,254 samples, 1.60%)</title><rect x="1169.8" y="245" width="19.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1172.85" y="255.5" ></text>
</g>
<g >
<title>jl_toplevel_eval_flex (367,295,433 samples, 20.17%)</title><rect x="950.7" y="485" width="238.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="953.73" y="495.5" >jl_toplevel_eval_flex</text>
</g>
<g >
<title>zfs_dirty_inode (768,417,691 samples, 42.21%)</title><rect x="134.4" y="469" width="498.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="137.42" y="479.5" >zfs_dirty_inode</text>
</g>
<g >
<title>x64_sys_call (768,417,691 samples, 42.21%)</title><rect x="134.4" y="645" width="498.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="137.42" y="655.5" >x64_sys_call</text>
</g>
<g >
<title>zpl_iter_read (768,417,691 samples, 42.21%)</title><rect x="134.4" y="565" width="498.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="137.42" y="575.5" >zpl_iter_read</text>
</g>
<g >
<title>do_mprotect_pkey (28,162,509 samples, 1.55%)</title><rect x="950.7" y="325" width="18.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="953.73" y="335.5" ></text>
</g>
</g>
</svg>
