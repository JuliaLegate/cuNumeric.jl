import{_ as a,c as n,o as r,aA as i}from"./chunks/framework.BuIujGnI.js";const u=JSON.parse('{"title":"Performance Tips","description":"","frontmatter":{},"headers":[],"relativePath":"perf.md","filePath":"perf.md","lastUpdated":null}'),o={name:"perf.md"};function t(s,e,d,c,l,p){return r(),n("div",null,e[0]||(e[0]=[i('<h1 id="Performance-Tips" tabindex="-1">Performance Tips <a class="header-anchor" href="#Performance-Tips" aria-label="Permalink to &quot;Performance Tips {#Performance-Tips}&quot;">​</a></h1><h2 id="Avoid-Scalar-Indexing" tabindex="-1">Avoid Scalar Indexing <a class="header-anchor" href="#Avoid-Scalar-Indexing" aria-label="Permalink to &quot;Avoid Scalar Indexing {#Avoid-Scalar-Indexing}&quot;">​</a></h2><p>Accessing elements of an NDArray one at a time (e.g., <code>arr[5]</code>) is slow and should be avoided. Indexing like this requires data to be trasfered between device and host and maybe even communicated across nodes. In the future, scalar indexing will emit a warning which can be opted out of. Several functions in the existing API invoke scalar indexing and are intended for testing (e.g., the <code>==</code> operator).</p><h2 id="Kernel-Fusion" tabindex="-1">Kernel Fusion <a class="header-anchor" href="#Kernel-Fusion" aria-label="Permalink to &quot;Kernel Fusion {#Kernel-Fusion}&quot;">​</a></h2><p>cuPyNumeric does not fuse independent operations automatically. This is a priority for the beta release.</p>',5)]))}const h=a(o,[["render",t]]);export{u as __pageData,h as default};
