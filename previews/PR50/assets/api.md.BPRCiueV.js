import{_ as p,C as h,c as r,o as k,aA as n,j as i,G as e,a as t,w as l}from"./chunks/framework.Dmj7Cwgt.js";const ls=JSON.parse('{"title":"Public API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),d={name:"api.md"},o={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""};function Y(Z,s,ss,is,as,es){const a=h("Badge");return k(),r("div",null,[s[161]||(s[161]=n('<h1 id="Public-API" tabindex="-1">Public API <a class="header-anchor" href="#Public-API" aria-label="Permalink to &quot;Public API {#Public-API}&quot;">â€‹</a></h1><p>User facing functions supported by cuNumeric.jl</p><ul><li><a href="./api#Public-API">Public API</a></li><li><a href="./api#cnpreferences">CNPreferences</a></li><li><a href="./api#Internal-API">Internal API</a></li></ul>',3)),i("details",o,[i("summary",null,[s[0]||(s[0]=i("a",{id:"cuNumeric.versioninfo-Tuple{}",href:"#cuNumeric.versioninfo-Tuple{}"},[i("span",{class:"jlbinding"},"cuNumeric.versioninfo")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">versioninfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Prints the cuNumeric build configuration summary, including package metadata, Julia and compiler version, and paths to core dependencies.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/cuNumeric.jl#L112-L117",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),i("details",E,[i("summary",null,[s[4]||(s[4]=i("a",{id:"cuNumeric.disable_gc!-Tuple{}",href:"#cuNumeric.disable_gc!-Tuple{}"},[i("span",{class:"jlbinding"},"cuNumeric.disable_gc!")],-1)),s[5]||(s[5]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disable_gc!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Disables the automatic garbage collection heuristics. This gives the user full control over memory management.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/memory.jl#L25-L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),i("details",g,[i("summary",null,[s[8]||(s[8]=i("a",{id:"cuNumeric.init_gc!-Tuple{}",href:"#cuNumeric.init_gc!-Tuple{}"},[i("span",{class:"jlbinding"},"cuNumeric.init_gc!")],-1)),s[9]||(s[9]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init_gc!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Initializes the cuNumeric garbage collector by querying the available device memory and enabling the automatic GC heuristics.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/memory.jl#L13-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),i("details",y,[i("summary",null,[s[12]||(s[12]=i("a",{id:"cuNumeric.get_time_microseconds-Tuple{}",href:"#cuNumeric.get_time_microseconds-Tuple{}"},[i("span",{class:"jlbinding"},"cuNumeric.get_time_microseconds")],-1)),s[13]||(s[13]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=i("p",null,"Returns the timestamp in microseconds. Blocks on all Legate operations preceding the call to this function.",-1)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/util.jl#L3-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),i("details",u,[i("summary",null,[s[16]||(s[16]=i("a",{id:"cuNumeric.get_time_nanoseconds-Tuple{}",href:"#cuNumeric.get_time_nanoseconds-Tuple{}"},[i("span",{class:"jlbinding"},"cuNumeric.get_time_nanoseconds")],-1)),s[17]||(s[17]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=i("p",null,"Returns the timestamp in nanoseconds. Blocks on all Legate operations preceding the call to this function.",-1)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/util.jl#L11-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),i("details",c,[i("summary",null,[s[20]||(s[20]=i("a",{id:"Base.:--Union{Tuple{V}, Tuple{T}, Tuple{V, NDArray{T}}} where {T, V<:Union{Bool, Float32, Float64, Int32, Int64}}",href:"#Base.:--Union{Tuple{V}, Tuple{T}, Tuple{V, NDArray{T}}} where {T, V<:Union{Bool, Float32, Float64, Int32, Int64}}"},[i("span",{class:"jlbinding"},"Base.:-")],-1)),s[21]||(s[21]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base.:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base.:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base.:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform subtraction involving an <code>NDArray</code> and a scalar or between two NDArrays.</p><ul><li><p><code>val - arr</code> subtracts <code>val</code> by <code>arr</code>.</p></li><li><p><code>arr - val</code> subtracts scalar <code>val</code> from each element of <code>arr</code>.</p></li><li><p>Element-wise subtraction is supported between two NDArrays.</p></li></ul><p>Broadcasting is also supported for these operations.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lhs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rhs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lhs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rhs</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L480-L499",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"Base.:/-Union{Tuple{V}, Tuple{T}, Tuple{NDArray{T}, V}} where {T, V<:Union{Float32, Float64, Int32, Int64}}",href:"#Base.:/-Union{Tuple{V}, Tuple{T}, Tuple{NDArray{T}, V}} where {T, V<:Union{Float32, Float64, Int32, Int64}}"},[i("span",{class:"jlbinding"},"Base.:/")],-1)),s[25]||(s[25]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base.:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scalar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Broadcast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">broadcasted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scalar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the element-wise multiplication of <code>arr</code> by the scalar reciprocal <code>1 / val</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L570-L581",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[26]})]),i("details",F,[i("summary",null,[s[28]||(s[28]=i("a",{id:"Base.:==-Tuple{NDArray, Array}",href:"#Base.:==-Tuple{NDArray, Array}"},[i("span",{class:"jlbinding"},"Base.:==")],-1)),s[29]||(s[29]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, julia_arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(julia_arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compare an <code>NDArray</code> and a Julia <code>Array</code> for element-wise equality.</p><p>Returns <code>true</code> if both arrays have the same shape and all corresponding elements are equal. Returns <code>false</code> otherwise (including if sizes differ, with a warning).</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function uses scalar indexing and should not be used in production code. This is meant for testing.</p></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia_arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> julia_arr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia_arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia_arr2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> julia_arr2</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L768-L792",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[30]})]),i("details",C,[i("summary",null,[s[32]||(s[32]=i("a",{id:"Base.:==-Tuple{NDArray, NDArray}",href:"#Base.:==-Tuple{NDArray, NDArray}"},[i("span",{class:"jlbinding"},"Base.:==")],-1)),s[33]||(s[33]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if two NDArrays are equal element-wise.</p><p>Returns <code>true</code> if both arrays have the same shape and all corresponding elements are equal. Currently supports arrays up to 3 dimensions. For higher dimensions, returns <code>false</code> with a warning.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function uses scalar indexing and should not be used in production code. This is meant for testing.</p></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L725-L747",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[34]})]),i("details",m,[i("summary",null,[s[36]||(s[36]=i("a",{id:"Base.Broadcast.broadcasted-Union{Tuple{T}, Tuple{typeof/, NDArray{T}, NDArray{T}}} where T",href:"#Base.Broadcast.broadcasted-Union{Tuple{T}, Tuple{typeof/, NDArray{T}, NDArray{T}}} where T"},[i("span",{class:"jlbinding"},"Base.Broadcast.broadcasted")],-1)),s[37]||(s[37]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Broadcast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">broadcasted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), lhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform element-wise division of two NDArrays.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> B</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C)</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L610-L622",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[38]})]),i("details",A,[i("summary",null,[s[40]||(s[40]=i("a",{id:"Base.Broadcast.broadcasted-Union{Tuple{V}, Tuple{T}, Tuple{typeof/, V, NDArray{T}}} where {T, V<:Union{Float32, Float64, Int32, Int64}}",href:"#Base.Broadcast.broadcasted-Union{Tuple{V}, Tuple{T}, Tuple{typeof/, V, NDArray{T}}} where {T, V<:Union{Float32, Float64, Int32, Int64}}"},[i("span",{class:"jlbinding"},"Base.Broadcast.broadcasted")],-1)),s[41]||(s[41]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Broadcast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">broadcasted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scalar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Throws an error since element-wise division of a scalar by an NDArray is not supported yet.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2 ./ arr # ERROR</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L592-L602",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[42]})]),i("details",f,[i("summary",null,[s[44]||(s[44]=i("a",{id:"Base.copy-Tuple{NDArray}",href:"#Base.copy-Tuple{NDArray}"},[i("span",{class:"jlbinding"},"Base.copy")],-1)),s[45]||(s[45]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create and return a deep copy of the given <code>NDArray</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L690-L702",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[46]})]),i("details",T,[i("summary",null,[s[48]||(s[48]=i("a",{id:"Base.firstindex-Tuple{NDArray, Int64}",href:"#Base.firstindex-Tuple{NDArray, Int64}"},[i("span",{class:"jlbinding"},"Base.firstindex")],-1)),s[49]||(s[49]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[51]||(s[51]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firstindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Provide the first and last valid indices along a given dimension <code>dim</code> for <code>NDArray</code>.</p><ul><li><p><code>firstindex</code> always returns 1, since Julia arrays are 1-indexed.</p></li><li><p><code>lastindex</code> returns the size of the array along the specified dimension.</p></li><li><p><code>lastindex(arr)</code> returns the size along the first dimension.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firstindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L83-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[50]})]),i("details",_,[i("summary",null,[s[52]||(s[52]=i("a",{id:"Base.isapprox-Tuple{AbstractArray, NDArray}",href:"#Base.isapprox-Tuple{AbstractArray, NDArray}"},[i("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[53]||(s[53]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; atol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rtol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, julia_array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; atol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rtol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(julia_array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; atol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rtol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Approximate equality comparison between two <code>NDArray</code>s or between an <code>NDArray</code> and a Julia <code>AbstractArray</code>.</p><p>Returns <code>true</code> if the arrays have the same shape and all corresponding elements are approximately equal within the given absolute tolerance <code>atol</code> and relative tolerance <code>rtol</code>.</p><p>The second and third methods handle comparisons between <code>NDArray</code> and Julia arrays by forwarding to a common comparison function.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function uses scalar indexing and should not be used in production code. This is meant for testing.</p></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia_arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1, arr2)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1, julia_arr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(julia_arr, arr2)</span></span></code></pre></div>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[54]||(s[54]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L815-L843",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[54]})]),i("details",N,[i("summary",null,[s[56]||(s[56]=i("a",{id:"Base.size-Tuple{NDArray}",href:"#Base.size-Tuple{NDArray}"},[i("span",{class:"jlbinding"},"Base.size")],-1)),s[57]||(s[57]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the size of the given <code>NDArray</code>.</p><ul><li><p><code>Base.size(arr)</code> returns a tuple of dimensions of the array.</p></li><li><p><code>Base.size(arr, dim)</code> returns the size of the array along the specified dimension <code>dim</code>.</p></li></ul><p>These override Base&#39;s size methods for the <code>NDArray</code> type, using the underlying cuNumeric API to query array shape.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[58]||(s[58]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L61-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[58]})]),i("details",j,[i("summary",null,[s[60]||(s[60]=i("a",{id:"LinearAlgebra.mul!-Union{Tuple{T}, Tuple{NDArray{T, 2}, NDArray{T, 2}, NDArray{T, 2}}} where T",href:"#LinearAlgebra.mul!-Union{Tuple{T}, Tuple{NDArray{T, 2}, NDArray{T, 2}, NDArray{T, 2}}} where T"},[i("span",{class:"jlbinding"},"LinearAlgebra.mul!")],-1)),s[61]||(s[61]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LinearAlgebra</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mul!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the matrix multiplication (dot product) of <code>arr1</code> and <code>arr2</code>, storing the result in <code>out</code>.</p><p>This function performs the operation in-place, modifying <code>out</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LinearAlgebra</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mul!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out, a, b)</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[62]||(s[62]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L670-L684",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[62]})]),i("details",D,[i("summary",null,[s[64]||(s[64]=i("a",{id:"Random.rand!-Tuple{NDArray}",href:"#Random.rand!-Tuple{NDArray}"},[i("span",{class:"jlbinding"},"Random.rand!")],-1)),s[65]||(s[65]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[67]||(s[67]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fills <code>arr</code> with Float64s uniformly at random.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cuNumeric.rand(NDArray, dims::Int...)</span></span>
<span class="line"><span>cuNumeric.rand(NDArray, dims::Tuple)</span></span></code></pre></div><p>Create a new <code>NDArray</code> of element type Float64, filled with uniform random values.</p><p>This function uses the same signature as <code>Base.rand</code> with a custom backend, and currently supports only <code>Float64</code> with uniform distribution (<code>code = 0</code>).</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NDArray, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NDArray, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span></code></pre></div>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[66]||(s[66]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L384-L403",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[66]})]),i("details",B,[i("summary",null,[s[68]||(s[68]=i("a",{id:"cuNumeric.add!-Tuple{NDArray, NDArray, NDArray}",href:"#cuNumeric.add!-Tuple{NDArray, NDArray, NDArray}"},[i("span",{class:"jlbinding"},"cuNumeric.add!")],-1)),s[69]||(s[69]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[71]||(s[71]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute element-wise addition of <code>arr1</code> and <code>arr2</code> storing the result in <code>out</code>.</p><p>This is an in-place operation and is used to support <code>.+=</code> style syntax.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out, a, b)</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[70]||(s[70]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L632-L646",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[70]})]),i("details",v,[i("summary",null,[s[72]||(s[72]=i("a",{id:"cuNumeric.as_type-Union{Tuple{T}, Tuple{NDArray, Type{T}}} where T",href:"#cuNumeric.as_type-Union{Tuple{T}, Tuple{NDArray, Type{T}}} where T"},[i("span",{class:"jlbinding"},"cuNumeric.as_type")],-1)),s[73]||(s[73]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T}</span></span></code></pre></div><p>Convert the element type of <code>arr</code> to type <code>T</code>, returning a new <code>NDArray</code> with elements cast to <code>T</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>arr::NDArray</code>: Input array.</p></li><li><p><code>t::Type{T}</code>: Target element type.</p></li></ul><p><strong>Returns</strong></p><p>A new <code>NDArray</code> with the same shape as <code>arr</code> but with elements of type <code>T</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr, Float32)</span></span></code></pre></div>`,8)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[74]||(s[74]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L20-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[74]})]),i("details",x,[i("summary",null,[s[76]||(s[76]=i("a",{id:"cuNumeric.assign-Tuple{NDArray, NDArray}",href:"#cuNumeric.assign-Tuple{NDArray, NDArray}"},[i("span",{class:"jlbinding"},"cuNumeric.assign")],-1)),s[77]||(s[77]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[79]||(s[79]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, other</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Assign the contents of <code>other</code> to <code>arr</code> element-wise.</p><p>This function overwrites the data in <code>arr</code> with the values from <code>other</code>. Both arrays must have the same shape.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[78]||(s[78]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L707-L722",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[78]})]),i("details",I,[i("summary",null,[s[80]||(s[80]=i("a",{id:"cuNumeric.full-Union{Tuple{T}, Tuple{NTuple{N, Int64} where N, T}} where T<:Union{Bool, Float32, Float64, Int32, Int64}",href:"#cuNumeric.full-Union{Tuple{T}, Tuple{NTuple{N, Int64} where N, T}} where T<:Union{Bool, Float32, Float64, Int32, Int64}"},[i("span",{class:"jlbinding"},"cuNumeric.full")],-1)),s[81]||(s[81]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val)</span></span></code></pre></div><p>Create an <code>NDArray</code> filled with the scalar value <code>val</code>, with the shape specified by <code>dims</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[82]||(s[82]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L269-L280",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[82]})]),i("details",P,[i("summary",null,[s[84]||(s[84]=i("a",{id:"cuNumeric.multiply!-Tuple{NDArray, NDArray, NDArray}",href:"#cuNumeric.multiply!-Tuple{NDArray, NDArray, NDArray}"},[i("span",{class:"jlbinding"},"cuNumeric.multiply!")],-1)),s[85]||(s[85]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">multiply!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute element-wise multiplication of <code>arr1</code> and <code>arr2</code>, storing the result in <code>out</code>.</p><p>This function performs the operation in-place, modifying <code>out</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">multiply!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out, a, b)</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[86]||(s[86]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L651-L665",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[86]})]),i("details",L,[i("summary",null,[s[88]||(s[88]=i("a",{id:"cuNumeric.ones-Union{Tuple{T}, Tuple{Type{T}, NTuple{N, Int64} where N}} where T",href:"#cuNumeric.ones-Union{Tuple{T}, Tuple{Type{T}, NTuple{N, Int64} where N}} where T"},[i("span",{class:"jlbinding"},"cuNumeric.ones")],-1)),s[89]||(s[89]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[91]||(s[91]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float64,] dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float64,] dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an NDArray with element type <code>T</code>, of all zeros with size specified by <code>dims</code>. This function has the same signature as <code>Base.ones</code>, so be sure to call it as <code>cuNuermic.ones</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float32, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int32, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[90]||(s[90]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L354-L367",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[90]})]),i("details",S,[i("summary",null,[s[92]||(s[92]=i("a",{id:"cuNumeric.zeros-Union{Tuple{T}, Tuple{Type{T}, NTuple{N, Int64} where N}} where T<:Union{Bool, Float32, Float64, Int32, Int64}",href:"#cuNumeric.zeros-Union{Tuple{T}, Tuple{Type{T}, NTuple{N, Int64} where N}} where T<:Union{Bool, Float32, Float64, Int32, Int64}"},[i("span",{class:"jlbinding"},"cuNumeric.zeros")],-1)),s[93]||(s[93]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float32,] dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float32,] dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an NDArray with element type <code>T</code>, of all zeros with size specified by <code>dims</code>. This function mirrors the signature of <code>Base.zeros</code>, and defaults to <code>Float32</code> when the type is omitted.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cuNumeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int32, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[94]||(s[94]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/ndarray.jl#L323-L336",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[94]})]),i("details",w,[i("summary",null,[s[96]||(s[96]=i("a",{id:"cuNumeric.unary_op_map_no_args",href:"#cuNumeric.unary_op_map_no_args"},[i("span",{class:"jlbinding"},"cuNumeric.unary_op_map_no_args")],-1)),s[97]||(s[97]=t()),e(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[99]||(s[99]=n(`<p><strong>Supported Unary Operations</strong></p><p>The following unary operations are supported and can be applied directly to <code>NDArray</code> values:</p><ul><li><p><code>abs</code></p></li><li><p><code>acos</code></p></li><li><p><code>asin</code></p></li><li><p><code>asinh</code></p></li><li><p><code>atan</code></p></li><li><p><code>atanh</code></p></li><li><p><code>cbrt</code></p></li><li><p><code>conj</code></p></li><li><p><code>cos</code></p></li><li><p><code>cosh</code></p></li><li><p><code>deg2rad</code></p></li><li><p><code>exp</code></p></li><li><p><code>exp2</code></p></li><li><p><code>expm1</code></p></li><li><p><code>floor</code></p></li><li><p><code>log</code></p></li><li><p><code>log10</code></p></li><li><p><code>log1p</code></p></li><li><p><code>log2</code></p></li><li><p><code>-</code> (negation)</p></li><li><p><code>rad2deg</code></p></li><li><p><code>sin</code></p></li><li><p><code>sinh</code></p></li><li><p><code>sqrt</code></p></li><li><p><code>square</code></p></li><li><p><code>tan</code></p></li><li><p><code>tanh</code></p></li></ul><p>These operations are applied elementwise by default and follow standard Julia semantics.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float32, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">square</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[98]||(s[98]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/unary.jl#L3-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[98]})]),i("details",V,[i("summary",null,[s[100]||(s[100]=i("a",{id:"cuNumeric.unary_reduction_map",href:"#cuNumeric.unary_reduction_map"},[i("span",{class:"jlbinding"},"cuNumeric.unary_reduction_map")],-1)),s[101]||(s[101]=t()),e(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[103]||(s[103]=n(`<p><strong>Supported Unary Reduction Operations</strong></p><p>The following unary reduction operations are supported and can be applied directly to <code>NDArray</code> values:</p><p>â€¢ <code>maximum</code> â€¢ <code>minimum</code> â€¢ <code>prod</code> â€¢ <code>sum</code></p><p>These operations follow standard Julia semantics.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float32, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[102]||(s[102]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/unary.jl#L135-L158",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[102]})]),i("details",M,[i("summary",null,[s[104]||(s[104]=i("a",{id:"cuNumeric.square",href:"#cuNumeric.square"},[i("span",{class:"jlbinding"},"cuNumeric.square")],-1)),s[105]||(s[105]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[107]||(s[107]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">square</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Elementwise square of each element in <code>arr</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[106]||(s[106]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/unary.jl#L95-L99",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[106]})]),i("details",J,[i("summary",null,[s[108]||(s[108]=i("a",{id:"cuNumeric.binary_op_map",href:"#cuNumeric.binary_op_map"},[i("span",{class:"jlbinding"},"cuNumeric.binary_op_map")],-1)),s[109]||(s[109]=t()),e(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[111]||(s[111]=n(`<p><strong>Supported Binary Operations</strong></p><p>The following binary operations are supported and can be applied elementwise to pairs of <code>NDArray</code> values:</p><p>â€¢ <code>+</code> â€¢ <code>-</code> â€¢ <code>*</code> â€¢ <code>/</code> â€¢ <code>^</code> â€¢ <code>div</code> â€¢ <code>atan</code> â€¢ <code>hypot</code></p><p>These operations are applied elementwise by default and follow standard Julia semantics.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> B</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> B</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hypot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(A, B)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(A, B)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[110]||(s[110]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/binary.jl#L1-L31",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[110]})]),s[162]||(s[162]=i("h1",{id:"CNPreferences",tabindex:"-1"},[t("CNPreferences "),i("a",{class:"header-anchor",href:"#CNPreferences","aria-label":'Permalink to "CNPreferences {#CNPreferences}"'},"â€‹")],-1)),s[163]||(s[163]=i("p",null,[t("This section details how to set custom build configuration options. To see more details visit our install guide "),i("a",{href:"./install"},"here"),t(".")],-1)),i("details",R,[i("summary",null,[s[112]||(s[112]=i("a",{id:"CNPreferences.check_unchanged-Tuple{}",href:"#CNPreferences.check_unchanged-Tuple{}"},[i("span",{class:"jlbinding"},"CNPreferences.check_unchanged")],-1)),s[113]||(s[113]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[115]||(s[115]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CNPreferences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">check_unchanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Throws an error if the preferences have been modified in the current Julia session, or if they are modified after this function is called.</p><p>This is should be called from the <code>__init__()</code> function of any package which relies on the values of CNPreferences.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[114]||(s[114]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/lib/CNPreferences/src/CNPreferences.jl#L32-L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[114]})]),i("details",O,[i("summary",null,[s[116]||(s[116]=i("a",{id:"CNPreferences.use_conda-Tuple{String}",href:"#CNPreferences.use_conda-Tuple{String}"},[i("span",{class:"jlbinding"},"CNPreferences.use_conda")],-1)),s[117]||(s[117]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[119]||(s[119]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CNPreferences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">use_conda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conda_env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; export_prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Tells cuNumeric.jl to use existing conda install. We make no gurantees of compiler compatability at this time.</p><p>Expects <code>conda_env</code> to be the absolute path to the root of the environment. For example, <code>/home/julialegate/.conda/envs/cunumeric-gpu</code></p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[118]||(s[118]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/lib/CNPreferences/src/CNPreferences.jl#L51-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[118]})]),i("details",U,[i("summary",null,[s[120]||(s[120]=i("a",{id:"CNPreferences.use_developer_mode-Tuple{}",href:"#CNPreferences.use_developer_mode-Tuple{}"},[i("span",{class:"jlbinding"},"CNPreferences.use_developer_mode")],-1)),s[121]||(s[121]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[123]||(s[123]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CNPreferences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">use_developer_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; wrapper_branch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, use_cupynumeric_jll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cupynumeric_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, export_prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Tells cuNumeric.jl to enable developer mode. This will clone cunumeric_jl_wrapper into cuNumeric.jl/deps.</p><p>To specify a cunumeric_jl_wrapper branch: <code>wrapper_branch=&quot;some-branch&quot;</code> To disable using cupynumeric_jll: <code>use_cupynumeric_jll=false</code> If you disable cupynumeric_jll, then you need to set a path to cuPyNumeric with <code>cupynumeric_path=&quot;/path/to/cupynumeric&quot;</code></p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[122]||(s[122]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/lib/CNPreferences/src/CNPreferences.jl#L112-L120",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[122]})]),i("details",z,[i("summary",null,[s[124]||(s[124]=i("a",{id:"CNPreferences.use_jll_binary-Tuple{}",href:"#CNPreferences.use_jll_binary-Tuple{}"},[i("span",{class:"jlbinding"},"CNPreferences.use_jll_binary")],-1)),s[125]||(s[125]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[127]||(s[127]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CNPreferences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">use_jll_binary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; export_prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Tells Legate.jl to use JLLs. This is the default option.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[126]||(s[126]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/lib/CNPreferences/src/CNPreferences.jl#L83-L87",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[126]})]),s[164]||(s[164]=i("h1",{id:"Internal-API",tabindex:"-1"},[t("Internal API "),i("a",{class:"header-anchor",href:"#Internal-API","aria-label":'Permalink to "Internal API {#Internal-API}"'},"â€‹")],-1)),i("details",q,[i("summary",null,[s[128]||(s[128]=i("a",{id:"cuNumeric.NDArray",href:"#cuNumeric.NDArray"},[i("span",{class:"jlbinding"},"cuNumeric.NDArray")],-1)),s[129]||(s[129]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[131]||(s[131]=i("p",null,[i("strong",null,"Internal API")],-1)),s[132]||(s[132]=i("p",null,[t("The NDArray type represents a multi-dimensional array in cuNumeric. It is a wrapper around a Legate array and provides various methods for array manipulation and operations. Finalizer calls "),i("code",null,"nda_destroy_array"),t(" to clean up the underlying Legate array when the NDArray is garbage collected.")],-1)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[130]||(s[130]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L27-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[130]})]),i("details",W,[i("summary",null,[s[133]||(s[133]=i("a",{id:"Base.eltype-Tuple{NDArray}",href:"#Base.eltype-Tuple{NDArray}"},[i("span",{class:"jlbinding"},"Base.eltype")],-1)),s[134]||(s[134]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[136]||(s[136]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eltype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Returns the element type of the <code>NDArray</code>.</p><p>This method uses <code>nda_array_type_code</code> internally to map to the appropriate Julia element type.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[135]||(s[135]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L252-L260",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[135]})]),i("details",$,[i("summary",null,[s[137]||(s[137]=i("a",{id:"cuNumeric.LegateType-Tuple{Type}",href:"#cuNumeric.LegateType-Tuple{Type}"},[i("span",{class:"jlbinding"},"cuNumeric.LegateType")],-1)),s[138]||(s[138]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[140]||(s[140]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LegateType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Converts a Julia type <code>T</code> to the corresponding Legate type.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[139]||(s[139]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L263-L269",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[139]})]),i("details",G,[i("summary",null,[s[141]||(s[141]=i("a",{id:"cuNumeric.compare-Tuple{AbstractArray, NDArray, Any}",href:"#cuNumeric.compare-Tuple{AbstractArray, NDArray, Any}"},[i("span",{class:"jlbinding"},"cuNumeric.compare")],-1)),s[142]||(s[142]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[144]||(s[144]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, max_diff)</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Compare two arrays <code>x</code> and <code>y</code> for approximate equality within a maximum difference <code>max_diff</code>.</p><p>Supports comparisons between:</p><ul><li><p>an <code>NDArray</code> and a Julia <code>AbstractArray</code></p></li><li><p>two <code>NDArray</code>s</p></li><li><p>a Julia <code>AbstractArray</code> and an <code>NDArray</code></p></li></ul><p>Returns <code>true</code> if the arrays have the same shape and element type (for mixed types), and all corresponding elements differ by no more than <code>max_diff</code>.</p><p>Emits warnings when array sizes or element types differ.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function uses scalar indexing and should not be used in production code. This is meant for testing.</p></div><p><strong>Notes</strong></p><ul><li><p>This is an internal API used by higher-level approximate equality functions.</p></li><li><p>Does not support relative tolerance (<code>rtol</code>).</p></li></ul><p><strong>Behavior</strong></p><ul><li><p>Checks size compatibility.</p></li><li><p>Checks element type compatibility for <code>NDArray</code> vs Julia array.</p></li><li><p>Iterates over elements using <code>CartesianIndices</code> to compare element-wise difference.</p></li></ul>',12)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[143]||(s[143]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L319-L349",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[143]})]),i("details",H,[i("summary",null,[s[145]||(s[145]=i("a",{id:"cuNumeric.shape-Tuple{NDArray}",href:"#cuNumeric.shape-Tuple{NDArray}"},[i("span",{class:"jlbinding"},"cuNumeric.shape")],-1)),s[146]||(s[146]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[148]||(s[148]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NDArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Return the size of the given <code>NDArray</code>.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[147]||(s[147]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L310-L316",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[147]})]),i("details",K,[i("summary",null,[s[149]||(s[149]=i("a",{id:"cuNumeric.slice_array-Union{NTuple{N, Tuple{Union{Nothing, Int64}, Union{Nothing, Int64}}}, Tuple{N}} where N",href:"#cuNumeric.slice_array-Union{NTuple{N, Tuple{Union{Nothing, Int64}, Union{Nothing, Int64}}}, Tuple{N}} where N"},[i("span",{class:"jlbinding"},"cuNumeric.slice_array")],-1)),s[150]||(s[150]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[152]||(s[152]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slice_array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vararg{Tuple{Union{Int,Nothing},Union{Int,Nothing}},N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N}</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Constructs a vector of <code>cuNumeric.Slice</code> objects from a variable number of <code>(start, stop)</code> tuples.</p><p>Each tuple corresponds to a dimension slice, using <code>slice</code> internally.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[151]||(s[151]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L292-L300",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[151]})]),i("details",Q,[i("summary",null,[s[153]||(s[153]=i("a",{id:"cuNumeric.to_cpp_index",href:"#cuNumeric.to_cpp_index"},[i("span",{class:"jlbinding"},"cuNumeric.to_cpp_index")],-1)),s[154]||(s[154]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[156]||(s[156]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_cpp_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, int_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UInt64)</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Converts a single Julia 1-based index <code>d</code> to a zero-based C++ style index wrapped in <code>StdVector</code>.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[155]||(s[155]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L243-L249",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[155]})]),i("details",X,[i("summary",null,[s[157]||(s[157]=i("a",{id:"cuNumeric.to_cpp_index-Union{Tuple{NTuple{N, Int64}}, Tuple{N}, Tuple{NTuple{N, Int64}, Type}} where N",href:"#cuNumeric.to_cpp_index-Union{Tuple{NTuple{N, Int64}}, Tuple{N}, Tuple{NTuple{N, Int64}, Type}} where N"},[i("span",{class:"jlbinding"},"cuNumeric.to_cpp_index")],-1)),s[158]||(s[158]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[160]||(s[160]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_cpp_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dims{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, int_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UInt64) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N}</span></span></code></pre></div><p><strong>Internal API</strong></p><p>Converts a Julia 1-based index tuple <code>idx</code> to a zero-based C++ style index wrapped in <code>StdVector</code> of the specified integer type.</p><p>Each element of <code>idx</code> is decremented by 1 to adjust from Juliaâ€™s 1-based indexing to C++ 0-based indexing.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[159]||(s[159]=[i("a",{href:"https://github.com/JuliaLegate/cuNumeric.jl/blob/18b3eee2acb3de636b2b1973b377af766f93688b/src/ndarray/detail/ndarray.jl#L230-L238",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[159]})])])}const ns=p(d,[["render",Y]]);export{ls as __pageData,ns as default};
